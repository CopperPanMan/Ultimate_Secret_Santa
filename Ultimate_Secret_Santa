import random
import numpy
from itertools import permutations
import copy

############### ULTIMATE SECRET SANTA, PYTHON EDITION ################
# This Program takes the maximum number of gifts someone wants to give (and get) in Secret Santa, and finds a distribution that works without assigning anyone the same person twice.

Mike, Ashley, Jen, Jim = 3,3,5,1
Bob, Linda, John = 1,3,4
Jing = 0

christmasListOriginal = ['Mike', 0, Mike, [], 'Ashley', 0, Ashley, [], 'Jen', 0, Jen, [], 'Jim', 0, Jim, [], 'Bob', 0, Bob, [], 'Linda', 0, Linda, [], 'John', 0, John, []]                                                                                                #[person, gifts_received, desired_gifts_given, [their people]]
christmasList = copy.deepcopy(christmasListOriginal)

## Randomly shuffle all possible permutations of christmasList ##
Q = list(range(int(len(christmasList)/4)))
random.shuffle(Q)
S = list(permutations(Q, int(len(christmasList)/4)))

random.seed()
reducedCount, count, done = 0,0,0

## Iterate through every possible pairing ##
while done == 0:
    for i in S:
        count += 1

        for x in i:
            gifts_given = 0

            # inner loop to choose assignees
            for y in i:                                                                                                                                                                            #increment through every desired gift of a person

                if gifts_given < christmasList[(x+1)*4-2] and christmasList[(S[x][y]+1)*4-4] != christmasList[(x+1)*4-4] and christmasList[(S[x][y]+1)*4-3] < christmasList[(S[x][y]+1)*4-2]:      #if gifts_given is still less than what you want, and you're not choosing yourself
                    christmasList[(x+1)*4-1].append(christmasList[(S[x][y]+1)*4-4])                                                                                                                #append the new assignee
                    christmasList[(S[x][y]+1)*4-3] += 1                                                                                                                                            #add 1 to gift_given of the assignee
                    gifts_given += 1

            done = 1
            for t in i:
                if christmasList[(S[x][t]+1)*4-2] != christmasList[(S[x][t]+1)*4-3]:                                                                                                               #if the gifts_received != desired_gifts_given, we're not done
                    done = 0
        
        if done == 1:
            print('\n')
            print('SOLUTION FOUND ON ITERATION', count, '!!')
            break
        else:
            del christmasList
            christmasList = copy.deepcopy(christmasListOriginal)
            print ('No Result Found. Resetting for iteration:', count+1)
    
    if done == 1:
        break

    #randomly drop a desired gift from the topmost person, and try again
    topRounds, topRoundsPos = 0,0

    for p in Q:
        if christmasList[(p+1)*4-2] > topRounds:
            topRounds = christmasList[(p+1)*4-2]
            topRoundsPos = p
        elif christmasList[(p+1)*4-2] == topRounds and random.random() < .5: # if two people's desired_gifts_given is equal, randomly pick one to drop
            topRoundsPos = p

    reducedCount += 1
    christmasListOriginal[(topRoundsPos+1)*4-2] -= 1
    del christmasList
    christmasList = copy.deepcopy(christmasListOriginal)
    print('\n')
    print(christmasList[(topRoundsPos+1)*4-4], 's desired_gifts has been reduced from', topRounds, 'to', christmasList[(topRoundsPos+1)*4-2], '\nSTARTING ROUND', reducedCount, '!\n')

## Print final Pairings ##
print('FINAL CHRISTMAS PAIRINGS: \n')
for p in Q:
    print(christmasList[(p+1)*4-4],': ', christmasList[(p+1)*4-1])
print('\n\n')
